#ifndef SORT_H
#define SORT_H
/* 
Алгоритмы сортировки.

*/

#include "../data_structures/list.h"

#include <vector>

size_t countListSize(const List& list) {
    size_t n = 0;
    list_node* current_node = list.top;
    while(current_node) {
        ++n;
        current_node = current_node->next;
    }
    return n - 1; // Первый элемент является ограничителем
}

/**
 * Сортировка вставкой в массивах.
 * Время работы: O(N^2)
 * Основная идея такого метода заключается в выборе элемента из списка ввода и его вставке
 * в соответствующую позицию отсортированного списка вывода, который изначально пуст.
 * 
 * Плюсы: 
 *  + Для относительно малых масиивов (менее 10 000 элементов) является достаточно быстрым.
 *  + Для совсем маленьких массивов (5-10 элементов) может работать эффекктивнее чем более
 *    сложные алгоритмы.  
 */
std::vector<int> insertionSort(std::vector<int>& values) {
    for(auto i = 0u; i < values.size(); ++i) {

    }
}

/// Сортировка выбором в массивах.

/// Сортировка пузырьком.



///

#endif